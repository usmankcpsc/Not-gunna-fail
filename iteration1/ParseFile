package iteration1;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.eclipse.jdt.core.dom.AST;
import org.eclipse.jdt.core.dom.ASTParser;
import org.eclipse.jdt.core.dom.ASTVisitor;
import org.eclipse.jdt.core.dom.CompilationUnit;
import org.eclipse.jdt.core.dom.SimpleName;
import org.eclipse.jdt.core.dom.VariableDeclarationFragment;
import org.eclipse.jdt.core.dom.ExpressionMethodReference;

public class ParseFile {
	private static ASTParser parser = ASTParser.newParser(AST.JLS9);
	private static ReadFile fileReader = new ReadFile();

	public static void Parse(File[] contents, String type) throws FileNotFoundException, IOException
	{
		for (File item : contents)
		{
			if (item.isFile())
			{
				char[] fileContent = fileReader.getFileContent(item);
				parser.setSource(fileContent);
				CompilationUnit cu = (CompilationUnit) parser.createAST(null);
				
				cu.accept(new ASTVisitor()
				{
					int declarations = 0;
					int references = 0;
					
					public boolean visit(VariableDeclarationFragment node)
					{
						declarations++;
						return false;
					}
					
					public boolean visit(ExpressionMethodReference node)
					{
						references++;
						return false;
					}
					public void endVisit(CompilationUnit node)
					{
						System.out.println(type + ". Declarations found: " + declarations + "; references found: " + references +".");
					}
				});
			}
		}
	}
}
